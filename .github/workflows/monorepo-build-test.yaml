# Validate all TypeScript projects in the monorepo

name: ts monorepo build-check-lint-test

on:
  push:
    branches: [main]
    paths:
      - api-server/**
      - common/**
      - website/**
      - package*.json
  pull_request:
    branches: [main]
    paths:
      - api-server/**
      - common/**
      - website/**
      - package*.json
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  install-check-lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      # NOTE: building at least common/ is necessary for the tests
      - run: npm run build
      - run: npm run check
      - run: npm run lint
      - run: npm run test
      # TODO: run db integration tests
      # - run: npm run test-db-integration
      #   working-directory: ./api-server
      #   changed-files: ./api-server
      #
      # TODO: save ./website/dist artifact and pass to a different workflow/job
      # that depends on this one completing successfully, instead of having it as a step here
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.AWS_GH_OIDC_ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ vars.AWS_REGION }}
      - name: deploy website to testing bucket
        run: ./infrastructure/deploy-website-to-testing-bucket.sh ${{ vars.MAIN_STACK_NAME }}
      #
      # TODO: build the api-server Dockerfile (see bash script) and deploy to ECR.
      # See https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-amazon-elastic-container-service
