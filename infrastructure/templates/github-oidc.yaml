Parameters:
  GitHubOrg:
    Description: GitHub organization to give OIDC role to
    Type: String
    AllowedPattern: "^[a-zA-Z0-9\\-]*$"
  GitHubRepo:
    Description: GitHub repo name to give OIDC role to
    Type: String
    AllowedPattern: "^[a-zA-Z0-9\\-]*$"
  GitHubBranch:
    Description: GitHub repo branch to give OIDC role to
    Type: String
    # NOTE: we could allow wildcard and use StringLike condition in GitHubOIDCRole,
    # but if we don't need it, let's restrict.
    AllowedPattern: "^[a-zA-Z0-9]*$"
    Default: main
  # ====== References in Policy ======
  MainStackArn:
    Description: ARN of the main Stack
    Type: String
  ApiServiceALogGroupArn:
    Description: ARN of ECS service log group A
    Type: String
  ApiServiceBLogGroupArn:
    Description: ARN of ECS service log group B
    Type: String
  EcsServiceA:
    Description: ARN of ECS api-server Service A
    Type: String
  EcsServiceB:
    Description: ARN of ECS api-server Service B
    Type: String
  EcsTaskExecutionRoleArnA:
    Description: ARN of ECS Task Execution Role A
    Type: String
  EcsTaskExecutionRoleArnB:
    Description: ARN of ECS Task Execution Role B
    Type: String
  PostgresKeyArn:
    Description: ARN of KMS key for Postgres secret
    Type: String
  PostgresArn:
    Description: ARN of Postgres DB instance
    Type: String
  # ====== Optional ======
  OIDCProviderArn:
    Description: |
      ARN for the GitHub OIDC Provider (if one exists).
      If not set, this stack will create a GitHub OIDC Provider.
      (You only need one GitHub OIDC provider per AWS account.)
    Default: ""
    Type: String

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  GitHubOIDCRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role for GitHub OIDC identity provider for GitHub Actions
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/${GitHubBranch}
      Policies:
        - PolicyName: main-stack-ci
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:GetTemplateSummary" # TODO no resource in call, needs "*"??
                  - "cloudformation:List*"
                  # TODO: are these needed?
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CancelUpdateStack"
                Resource: !Ref MainStackArn
              - Effect: Allow
                Action:
                  - "ecs:RegisterTaskDefinition"
                  - "ecs:DeregisterTaskDefinition"
                # Resource-level permissions are not supported for these actions
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                # Resource-level permissions are not supported for these actions
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ecs:DescribeServices"
                  - "ecs:UpdateService"
                Resource:
                  - !Ref EcsServiceA
                  - !Ref EcsServiceB
              - Effect: Allow
                Action:
                  - "elasticloadbalancing:DescribeLoadBalancers"
                  - "elasticloadbalancing:DescribeLoadBalancerAttributes"
                  - "elasticloadbalancing:DescribeTags"
                # Resource-level permissions are not supported for these actions
                Resource: "*"
              - Sid: GithubOidcAccess
                Effect: Allow
                Action:
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListRolePolicies"
                  - "iam:PassRole"
                Resource:
                  - !Ref EcsTaskExecutionRoleArnA
                  - !Ref EcsTaskExecutionRoleArnB
              - Effect: Allow
                Action:
                  - "kms:DescribeKey"
                  - "kms:GetKeyPolicy"
                  - "kms:GetKeyRotationStatus"
                  - "kms:ListResourceTags"
                Resource: !Ref PostgresKeyArn
              - Effect: Allow
                Action: "logs:DescribeLogGroups"
                # I don't think this action supports specifying a resource
                Resource: "*"
              - Effect: Allow
                Action: "logs:ListTagsForResource"
                Resource:
                  # EG: "arn:aws:logs:us-east-1:123456789:log-group:solarpunk-drifters/env-a/api-service"
                  # Annoyingly, the ARN for a LogGroup will end with ":*", which "logs:ListTagsForResource"
                  # won't allow, so that needs to be removed
                  - !Select
                    - 0
                    - !Split [":*", !Ref ApiServiceALogGroupArn]
                  - !Select
                    - 0
                    - !Split [":*", !Ref ApiServiceBLogGroupArn]
              - Effect: Allow
                Action: "rds:DescribeDBInstances"
                Resource: !Ref PostgresArn
        - PolicyName: get-ecr-authorization-token
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ecr:GetAuthorizationToken"
                Resource: "*"
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        # Note that the thumbprint has been set to all F's because the thumbprint is
        # not used when authenticating token.actions.githubusercontent.com. Instead,
        # IAM uses its library of trusted CAs to authenticate. However, this value is
        # still required by the API. (https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#sample-iam-oidc-cloudformation-template)
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  GitHubOIDCRoleArn:
    Description: ARN of the GitHub OIDC IdP role
    Value: !GetAtt GitHubOIDCRole.Arn
